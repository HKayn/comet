name: Build on push

on:
  push:
    branches:
      - main

jobs:
  build-dummy:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the dummy
        working-directory: dummy-service
        run: gcc -o GalaxyCommunication.exe main.c -ladvapi32
      - uses: actions/upload-artifact@v4
        with:
          name: dummy-GalaxyCommunication.exe
          path: dummy-service/GalaxyCommunication.exe
  build:
    strategy:
      matrix:
        target:
          [
            aarch64-unknown-linux-gnu,
            x86_64-unknown-linux-gnu,
            x86_64-apple-darwin,
            aarch64-apple-darwin,
            x86_64-pc-windows-msvc,
            aarch64-pc-windows-msvc,
          ]
    runs-on: ${{ (contains(matrix.target, 'apple-darwin') && 'macos-latest') ||
      (contains(matrix.target, 'linux-gnu') && 'ubuntu-latest') ||
      (contains(matrix.target, 'pc-windows') && 'windows-latest') }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        name: Install arm gcc
        run: sudo apt install gcc-aarch64-linux-gnu
      - name: Setup target
        run: rustup target add ${{ matrix.target }}
      - name: Build
        run: cargo build --verbose --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: comet-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ contains(matrix.target, 'pc-windows') && 'comet.exe' || 'comet' }}
